on:
  push:
    branches:
      - oper
name: oper

env:
  AWS_REGION: ap-northeast-2 # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: nginx-php7-psql-mysql-node # set this to your Amazon ECR repository name

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.SLS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SLS_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: branch
        id: branch
        run: echo "::set-output name=branch::oper"

      - name: snapshot
        id: snapshot
        run: echo "::set-output name=snapshot::${{ steps.branch.outputs.branch }}_$(git rev-parse --verify HEAD)"

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(TZ=Asia/Seoul date +'%Y%m%d_%H%M')"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: oper
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: API the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: notify build finish
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://wh.jandi.com/connect-api/webhook/20888115/e379310e0cd74d09505f866fbbe3120d"
          method: "POST"
          customHeaders: '{"Accept": "application/vnd.tosslab.jandi-v2+json", "Content-Type": "application/json"}'
          data: '{"body" : "[[GithubAction]](https://github.com/giftistar/giftistar-repo/actions) OPER ngninx php7 mysql server 배포 완료"}'
